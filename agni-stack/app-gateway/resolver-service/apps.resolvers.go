package resolverService

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.68

import (
	"app-gateway/graph/model"
	service "app-gateway/resolver-service/services"
	"context"
)

// CreateApp is the resolver for the createApp field.
func (r *mutationResolver) CreateApp(ctx context.Context, input model.AppInput) (*model.App, error) {
	app, err := service.CreateApp(ctx, input)
	if err != nil {
		return nil, err
	}

	return app, nil
}

// Apps is the resolver for the apps field.
func (r *queryResolver) Apps(ctx context.Context) ([]*model.App, error) {
	apps, err := service.GetApps(ctx)
	if err != nil {
		return nil, err
	}

	return apps, nil
}

// App is the resolver for the app field.
func (r *queryResolver) App(ctx context.Context, id string) (*model.App, error) {
	app, err := service.GetApp(ctx, id)
	if err != nil {
		return nil, err
	}

	return app, nil
}
