package resolverService

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.68

import (
	"app-gateway/graph/model"
	service "app-gateway/resolver-service/services"
	"context"
)

// CreateProject is the resolver for the createProject field.
func (r *mutationResolver) CreateProject(ctx context.Context, input model.ProjectInput) (*model.Project, error) {
	// panic(fmt.Errorf("not implemented: CreateProject - createProject"))

	project, err := service.CreateProject(ctx, input)
	if err != nil {
		return nil, err
	}

	return project, nil
}

// Projects is the resolver for the projects field.
func (r *queryResolver) Projects(ctx context.Context) ([]*model.Project, error) {
	projects, err := service.GetProjects(ctx)
	if err != nil {
		return nil, err
	}
	return projects, nil
}

// Project is the resolver for the project field.
func (r *queryResolver) Project(ctx context.Context, id string) (*model.Project, error) {
	project, err := service.GetProject(ctx, id)
	if err != nil {
		return nil, err
	}

	return project, nil
}
